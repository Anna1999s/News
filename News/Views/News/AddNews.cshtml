@model News.ViewModels.NewsViewModel

@{
    ViewData["Title"] = Model.Title;
}

<h2>@Model.Title</h2>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="AddANews">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="NewsTitle" class="control-label"></label>
                <input asp-for="NewsTitle" class="form-control" />
                <span asp-validation-for="NewsTitle" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Content" class="control-label"></label>
                <input asp-for="Content" class="form-control" />
                <span asp-validation-for="Content" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Category" class="control-label"></label>
                <select asp-for="Category.Id" class="form-control" asp-items="@(new SelectList(Model.Categoryes, "Id", "Name"))"></select> 
            </div>
            <div class="form-group">
                <input type="submit" value="@Model.AddButtonTitle" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
